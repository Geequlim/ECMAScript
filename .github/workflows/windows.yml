name: üèÅ Windows Builds
# TODO: Investigate making this on tag instead of push since builds take so long
on: [push]

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: '3.2.2-stable'
  BASE_BRANCH: master
  SCONS_CACHE_LIMIT: 4096

jobs:
  windows-editor:
    runs-on: ubuntu-latest
    name: Windows Editor
    container: 
      # See how this image is built at https://github.com/Flux159/godot-docker
      image: flux159/godot:1.0.0
    steps:
      - name: Checkout Godot
        uses: actions/checkout@v2
        with:
          repository: 'godotengine/godot'
          ref: ${{ env.GODOT_BASE_BRANCH }}

      - name: Checkout ECMAScript
        uses: actions/checkout@v2
        with:
          path: ${{github.workspace}}/modules/ECMAScript/

      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: windows-editor-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.BASE_BRANCH}}

      - name: Build godot with ECMAScript module for Windows
        run: |
          update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
          update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix
          update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix
          scons p=windows bits=64 target=release_debug -j8
          strip bin/godot.windows.opt.tools.64.exe

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: godot.javascript.windows.opt.tools.64.exe
          path: bin/godot.windows.opt.tools.64.exe

  windows-template:
    runs-on: ubuntu-latest
    name: Windows Template
    container: 
      # See how this image is built at https://github.com/Flux159/godot-docker
      image: flux159/godot:1.0.0
    steps:
      - name: Checkout Godot
        uses: actions/checkout@v2
        with:
          repository: 'godotengine/godot'
          ref: ${{ env.GODOT_BASE_BRANCH }}

      - name: Checkout ECMAScript
        uses: actions/checkout@v2
        with:
          path: ${{github.workspace}}/modules/ECMAScript/

      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: windows-template-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.BASE_BRANCH}}

      - name: Setup MinGW
        run: |
          update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
          update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix
          update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix

      - name: Build godot with ECMAScript module for Windows (release)
        run: |
          scons p=windows bits=64 tools=no target=release -j8
          strip bin/godot.windows.opt.64.exe

      - name: Publish artifact (release)
        uses: actions/upload-artifact@v2
        with:
          name: windows_64_release
          path: bin/godot.windows.opt.64.exe

      - name: Build godot with ECMAScript module for Windows (debug)
        run: |
          scons p=windows bits=64 tools=no target=release_debug -j8
          strip bin/godot.windows.opt.debug.64.exe

      - name: Publish artifact (debug)
        uses: actions/upload-artifact@v2
        with:
          name: windows_64_debug
          path: bin/godot.windows.opt.debug.64.exe