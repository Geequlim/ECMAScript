name: "\U0001F427 Linux Builds"
true:
- push
- pull_request
env:
  GODOT_BASE_BRANCH: 3.4-stable
  SCONSFLAG: ''
  SCONSFLAGS: verbose=yes warnings=all werror=yes
concurrency:
  cancel-in-progress: true
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-linux
jobs:
  build-linux:
    name: ${{ matrix.name }}
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Godot
      uses: actions/checkout@v2
      with:
        ref: ${{ env.GODOT_BASE_BRANCH }}
        repository: godotengine/godot
    - name: Checkout ECMSAScript
      uses: actions/checkout@v2
      with:
        path: ${{github.workspace}}/modules/ECMAScript/
    - name: Linux dependencies
      run: "# Azure repositories are not reliable, we need to prevent azure giving\
        \ us packages.\nsudo rm -f /etc/apt/sources.list.d/*\nsudo cp -f misc/ci/sources.list\
        \ /etc/apt/sources.list\nsudo apt-get update\n# The actual dependencies\n\
        sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev\
        \ \\\n    libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev\
        \ \\\n    libdbus-1-dev libudev-dev libxi-dev libxrandr-dev yasm xvfb wget\
        \ unzip\n"
      shell: bash
    - continue-on-error: true
      name: Setup Godot build cache
      uses: ./.github/actions/godot-cache
      with:
        cache-name: ${{ matrix.cache-name }}
    - name: Setup python and scons
      uses: ./.github/actions/godot-deps
    - name: Compilation
      uses: ./.github/actions/godot-build
      with:
        platform: linuxbsd
        sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
        target: ${{ matrix.target }}
        tools: ${{ matrix.tools }}
    - if: ${{ matrix.build-mono }}
      name: Generate Mono glue code
      run: 'DRI_PRIME=0 xvfb-run ${{ matrix.bin }} --generate-mono-glue modules/mono/glue
        || true

        '
    - if: ${{ matrix.build-mono }}
      name: Compilation (mono_glue=yes)
      uses: ./.github/actions/godot-build
      with:
        platform: linuxbsd
        sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} mono_glue=yes
        target: ${{ matrix.target }}
        tools: ${{ matrix.tools }}
    - if: ${{ matrix.test }}
      name: Download test project
      run: 'wget https://github.com/godotengine/regression-test-project/archive/3.4.zip

        unzip 3.4.zip

        mv "regression-test-project-3.4" "test_project"

        '
    - if: ${{ matrix.test }}
      name: Open and close editor
      run: 'DRI_PRIME=0 xvfb-run ${{ matrix.bin }} --audio-driver Dummy -e -q --path
        test_project 2>&1 | tee sanitizers_log.txt || true

        misc/scripts/check_ci_log.py sanitizers_log.txt

        '
    - if: ${{ matrix.test }}
      name: Run project
      run: 'DRI_PRIME=0 xvfb-run ${{ matrix.bin }} 30 --video-driver GLES3 --audio-driver
        Dummy --path test_project 2>&1 | tee sanitizers_log.txt || true

        misc/scripts/check_ci_log.py sanitizers_log.txt

        '
    - if: ${{ matrix.test }}
      name: Check for class reference updates
      run: 'echo "Running --doctool to see if this changes the public API without
        updating the documentation."

        echo -e "If a diff is shown, it means that your code/doc changes are incomplete
        and you should update the class reference with --doctool.\n\n"

        DRI_PRIME=0 xvfb-run ${{ matrix.bin }} --doctool . 2>&1 > /dev/null || true

        git diff --color --exit-code && ! git ls-files --others --exclude-standard
        | sed -e ''s/^/New doc file missing in PR: /'' | grep ''xml$''

        '
    - if: ${{ matrix.artifact }}
      name: Prepare artifact
      run: 'strip bin/godot.*

        '
    - if: ${{ matrix.artifact }}
      name: Upload artifact
      uses: ./.github/actions/upload-artifact
      with:
        name: ${{ matrix.cache-name }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - artifact: true
          bin: ./bin/godot.x11.opt.tools.64.mono
          build-mono: true
          cache-name: linux-editor-mono
          name: Editor w/ Mono (target=release_debug, tools=yes)
          sconsflags: module_mono_enabled=yes mono_static=yes mono_glue=no
          target: release_debug
          tools: true
        - artifact: false
          bin: ./bin/godot.x11.tools.64s
          build-mono: false
          cache-name: linux-editor-sanitizers
          name: Editor and sanitizers (target=debug, tools=yes, use_asan=yes, use_ubsan=yes)
          sconsflags: use_asan=yes use_ubsan=yes
          target: debug
          test: true
          tools: true
        - artifact: true
          build-mono: false
          cache-name: linux-template-mono
          name: Template w/ Mono (target=release, tools=no)
          sconsflags: module_mono_enabled=yes mono_static=yes mono_glue=no debug_symbols=no
          target: release
          tools: false
